import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, accuracy_score

# Generate synthetic air quality data
np.random.seed(0)
n_samples = 200

data = pd.DataFrame({
    'CO': np.random.uniform(0, 10, n_samples),          # Carbon Monoxide (ppm)
    'NO2': np.random.uniform(0, 200, n_samples),        # Nitrogen Dioxide (ppb)
    'PM2.5': np.random.uniform(0, 100, n_samples),      # Particulate Matter (Âµg/m3)
})

# Define air quality level based on CO level
def label_quality(co):
    if co < 3:
        return 'Good'
    elif co < 6:
        return 'Moderate'
    else:
        return 'Poor'

data['Quality'] = data['CO'].apply(label_quality)

# Split features and labels
X = data[['CO', 'NO2', 'PM2.5']]
y = data['Quality']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestClassifier()
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
